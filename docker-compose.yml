version: '3.8'

x-logging:
  &default-logging
  driver: json-file
  options:
    max-size: '20m'
    max-file: '5'
    tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  keys:
    container_name: chainflip-keys
    image: ghcr.io/cumpsd/chainflip-keys:latest
    logging: *default-logging
    volumes:
      - ./config:/chainflip/config

  geth:
    # http://127.0.0.1:6060/debug/metrics/prometheus
    container_name: chainflip-geth
    image: ethereum/client-go:alltools-stable
    logging: *default-logging
    restart: always
    networks:
      - chainflip
    ports:
      - 30303:30303 # ETH Network Port
    expose:
      - 30301 # Metrics Port
      - 8545  # HTTP Port
      - 8546  # WS Port
    volumes:
      - ./geth-data:/root/.ethereum
    command: geth --rinkeby --syncmode "snap" --http --http.addr 0.0.0.0 --http.corsdomain '*' --ws --ws.addr 0.0.0.0 --ws.origins "*" --metrics --metrics.addr 0.0.0.0 --metrics.port 30301 --pprof --pprof.addr 0.0.0.0 --pprof.port 30302

  chainflip-node:
    # http://127.0.0.1:9615
    container_name: chainflip-node
    image: ghcr.io/cumpsd/chainflip-node:latest
    logging: *default-logging
    restart: always
    networks:
      - chainflip
    ports:
      - 30333:30333 # Chainflip Network Port
    expose:
      - 9615 # Metrics Port
      - 9933
      - 9944 # RPC Port
    volumes:
      - ./config:/chainflip/config:ro
      - ./chaindata:/chainflip/chaindata
    depends_on:
      - keys
      - geth

  chainflip-engine:
    container_name: chainflip-engine
    image: ghcr.io/cumpsd/chainflip-engine:latest
    logging: *default-logging
    restart: always
    networks:
      - chainflip
    volumes:
      - ./config:/chainflip/config:ro
      - ./chaindata:/chainflip/chaindata:ro
    depends_on:
      - keys
      - geth
      - chainflip-node

  prometheus:
    # http://127.0.0.1:9090/graph
    image: prom/prometheus
    container_name: chainflip-prometheus
    logging: *default-logging
    restart: always
    user: root
    networks:
      - chainflip
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-data:/prometheus
    depends_on:
      - geth
      - chainflip-node

  loki:
    image: grafana/loki
    container_name: chainflip-loki
    logging: *default-logging
    restart: always
    user: root
    networks:
      - chainflip
    expose:
      - 3100
    volumes:
      - ./config:/chainflip/config:ro
    command: -config.file=/chainflip/config/loki.yml

  promtail:
    image: grafana/promtail
    container_name: chainflip-promtail
    logging: *default-logging
    restart: always
    user: root
    networks:
      - chainflip
    volumes:
      - ./config:/chainflip/config:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/chainflip/config/promtail.yml

  grafana:
    image: grafana/grafana-oss
    container_name: chainflip-grafana
    logging: *default-logging
    restart: always
    user: root
    networks:
      - chainflip
    ports:
      - 3000:3000
    volumes:
      - ./grafana-data:/var/lib/grafana/
      - ./grafana-data/provisioning/:/etc/grafana/provisioning/:ro
    depends_on:
      prometheus:
        condition: service_started

networks:
  chainflip:
    name: chainflip-net
